package org.flight_booking.ui.pages;\n\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.support.FindBy;\n\npublic class FlightSearchFunctionality extends BasePage {\n\n    @FindBy(id = "fromDropdown")\n    private WebElement fromDropdown;\n\n    @FindBy(id = "toDropdown")\n    private WebElement toDropdown;\n\n    @FindBy(id = "passengersField")\n    private WebElement passengersField;\n\n    @FindBy(id = "travelClassDropdown")\n    private WebElement travelClassDropdown;\n\n    @FindBy(id = "searchButton")\n    private WebElement searchButton;\n\n    @FindBy(id = "errorMessage")\n    private WebElement errorMessage;\n\n    public void openFlightSearchPage() {\n        driver.get("https://example.com/flight-search");\n    }\n\n    public void verifyFromDropdownDefault() {\n        waitForElement(fromDropdown);\n        assert fromDropdown.getText().equals("Select City");\n    }\n\n    public void verifyToDropdownDefault() {\n        waitForElement(toDropdown);\n        assert toDropdown.getText().equals("Select City");\n    }\n\n    public void verifyPassengersFieldDefault() {\n        waitForElement(passengersField);\n        assert passengersField.getAttribute("value").equals("1");\n    }\n\n    public void verifyTravelClassDropdownDefault() {\n        waitForElement(travelClassDropdown);\n        assert travelClassDropdown.getText().equals("Economy");\n    }\n\n    public void leaveFromFieldBlankAndSearch() {\n        fromDropdown.clear();\n        searchButton.click();\n    }\n\n    public void verifyErrorMessageForBlankFromField() {\n        waitForElement(errorMessage);\n        assert errorMessage.getText().equals("Please select a departure city.");\n    }\n\n    public void leaveToFieldBlankAndSearch() {\n        toDropdown.clear();\n        searchButton.click();\n    }\n\n    public void verifyErrorMessageForBlankToField() {\n        waitForElement(errorMessage);\n        assert errorMessage.getText().equals("Please select a destination city.");\n    }\n\n    public void selectSameFromAndToFieldsAndSearch() {\n        fromDropdown.sendKeys("New York");\n        toDropdown.sendKeys("New York");\n        searchButton.click();\n    }\n\n    public void verifyErrorMessageForSameFromAndToFields() {\n        waitForElement(errorMessage);\n        assert errorMessage.getText().equals("Departure and destination cannot be the same.");\n    }\n\n    public void leaveDepartureDateBlankAndSearch() {\n        WebElement departureDateField = driver.findElement(By.id("departureDateField"));\n        departureDateField.clear();\n        searchButton.click();\n    }\n\n    public void verifyErrorMessageForBlankDepartureDate() {\n        waitForElement(errorMessage);\n        assert errorMessage.getText().equals("Please select a departure date.");\n    }\n\n    public void tryToSelectPastDateInDepartureDateField() {\n        WebElement departureDateField = driver.findElement(By.id("departureDateField"));\n        departureDateField.sendKeys("2022-01-01");\n        assert departureDateField.getAttribute("value").isEmpty();\n    }\n}