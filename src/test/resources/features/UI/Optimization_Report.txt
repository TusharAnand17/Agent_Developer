# Optimization Report for Flight Search Step Definitions

## Reusable Steps
1. Validating default values for dropdowns and fields.
   - Step: "the \"{string}\" dropdown should default to \"{string}\""
   - Step: "the \"{string}\" field should default to {int}"

2. Error message validation.
   - Step: "I should see an error message \"{string}\""
   - Step: "I should see a message \"{string}\""

3. Dropdown and checkbox interactions.
   - Step: "I open the \"Travel Class\" dropdown"
   - Step: "I check the \"One Way\" checkbox"
   - Step: "I uncheck the \"One Way\" checkbox"

4. Calendar picker interactions.
   - Step: "I open the calendar picker and navigate to future months"
   - Step: "I select a date in the calendar picker and click the \"Clear\" button"

5. Button state validations.
   - Step: "the \"Search\" button should be disabled"
   - Step: "the \"Search\" button should be enabled"

6. Filling fields with valid data.
   - Step: "I fill all mandatory fields with valid data"
   - Step: "I fill all fields with valid data and click \"Search\""

## Parameterized Steps
1. Dropdown and field default values.
   - Parameterized fields: "From", "To", "Passengers", "Travel Class"

2. Error messages.
   - Parameterized error messages for mandatory fields, invalid inputs, and boundary values.

3. Travel Class dropdown options.
   - Parameterized options: "Economy", "Business", "First"

4. Calendar navigation and date selection.
   - Parameterized date formats and navigation actions.

## New Helper Methods Added
1. `validateDropdownDefaultValue(String field, String defaultValue)`
2. `validateFieldDefaultValue(String field, int defaultValue)`
3. `leaveFieldBlankAndClick(String field, String button)`
4. `validateErrorMessage(String errorMessage)`
5. `selectSameCityForFromAndTo(String city)`
6. `validatePastDatesDisabled()`
7. `enterNonNumericValueInPassengersField(String value)`
8. `enterValueInPassengersField(int value)`
9. `validateDropdownOptions(String options)`
10. `validateReturnDateFieldHidden()`
11. `validateReturnDateFieldReappears()`
12. `leaveMandatoryFieldsBlank()`
13. `validateSearchButtonDisabled()`
14. `validateSearchButtonEnabled()`
15. `fillMandatoryFields(Map<String, String> data)`
16. `fillAllFieldsAndSearch(Map<String, String> data)`
17. `validateSearchResultsSortedByTime()`
18. `validateMessage(String message)`
19. `enterInvalidDateFormat(String date)`
20. `navigateCalendarToFutureMonths()`
21. `validateCalendarNavigation()`
22. `clearSelectedDate()`
23. `validateDateFieldCleared()`

## Patterns Leveraged from Existing Steps
1. Consistent logging for all steps.
2. Exception handling for robust execution.
3. DataTable support for multi-field input scenarios.
4. Reuse of BasePage methods for UI actions.